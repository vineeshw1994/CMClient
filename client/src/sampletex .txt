import React, { useState } from "react";

const TechnicalCreateCategory = () => {
  const [category, setCategory] = useState("");
  const [subcategory, setSubcategory] = useState("");
  const [columns, setColumns] = useState([]);
  const [metadata, setMetadata] = useState(null);

  const categories = ["Technology", "Science", "Engineering", "Mathematics"];
  const subcategories = {
    Technology: ["Software", "Hardware", "Networking"],
    Science: ["Physics", "Chemistry", "Biology"],
    Engineering: ["Mechanical", "Civil", "Electrical"],
    Mathematics: ["Applied Math", "Pure Math"],
  };

  const columnsList = Array.from({ length: 30 }, (_, index) => `column_${index + 1}`);

  const handleCategoryChange = (e) => {
    setCategory(e.target.value);
    setSubcategory(""); // Reset subcategory when category changes
  };

  const handleColumnSelection = (e) => {
    const value = e.target.value;
    if (e.target.checked) {
      setColumns((prev) => [...prev, value]);
    } else {
      setColumns(columns.filter((column) => column !== value));
    }
  };

  const handleSubmit = () => {
    const metadataObject = {
      category,
      subcategory,
      columns,
    };
    setMetadata(metadataObject);
    // You can also send this to the backend here (e.g., using fetch or axios)
    console.log("Metadata saved:", metadataObject);
  };

  return (
    <div className="max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-md space-y-8">
      <h2 className="text-3xl font-bold text-center text-gray-700">Create New Category</h2>
      
      {/* Category Selection */}
      <div className="space-y-4">
        <label htmlFor="category" className="block text-lg text-gray-600">Category</label>
        <select
          id="category"
          value={category}
          onChange={handleCategoryChange}
          className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all"
        >
          <option value="" disabled>Select a category</option>
          {categories.map((cat) => (
            <option key={cat} value={cat}>{cat}</option>
          ))}
        </select>
      </div>

      {/* Subcategory Selection (Conditional) */}
      {category && (
        <div className="space-y-4">
          <label htmlFor="subcategory" className="block text-lg text-gray-600">Subcategory (Optional)</label>
          <select
            id="subcategory"
            value={subcategory}
            onChange={(e) => setSubcategory(e.target.value)}
            className="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all"
          >
            <option value="">Select a subcategory (Optional)</option>
            {subcategory && subcategories[category]?.map((sub) => (
              <option key={sub} value={sub}>{sub}</option>
            ))}
          </select>
        </div>
      )}

      {/* Column Selection */}
      <div className="space-y-4">
        <label className="block text-lg text-gray-600">Select Columns</label>
        <div className="grid grid-cols-2 gap-4">
          {columnsList.map((column) => (
            <div key={column} className="flex items-center space-x-2">
              <input
                type="checkbox"
                id={column}
                value={column}
                onChange={handleColumnSelection}
                className="h-5 w-5 text-blue-500 border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
              />
              <label htmlFor={column} className="text-gray-600">{column}</label>
            </div>
          ))}
        </div>
      </div>

      {/* Submit Button */}
      <div className="flex justify-center mt-6">
        <button
          onClick={handleSubmit}
          className="bg-blue-600 text-white py-3 px-6 rounded-lg hover:bg-blue-500 transition-all duration-300 ease-in-out transform hover:scale-105"
        >
          Save Metadata
        </button>
      </div>

      {/* Show the Metadata (for visualization) */}
      {metadata && (
        <div className="mt-8 p-4 bg-gray-100 border border-gray-300 rounded-md">
          <h3 className="text-xl font-semibold text-gray-700">Metadata</h3>
          <pre className="text-gray-600">{JSON.stringify(metadata, null, 2)}</pre>
        </div>
      )}
    </div>
  );
};

export default TechnicalCreateCategory;
